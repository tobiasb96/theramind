# Generated by Django 5.2.4 on 2025-07-10 21:40

from django.db import migrations, models
import django.db.models.deletion
from django.utils import timezone


def create_therapies_for_existing_sessions(apps, schema_editor):
    """Create Therapy records for existing sessions"""
    Session = apps.get_model('therapy', 'Session')
    Therapy = apps.get_model('therapy', 'Therapy')
    Patient = apps.get_model('core', 'Patient')
    
    # Group sessions by patient
    patient_sessions = {}
    for session in Session.objects.all():
        patient_id = session.patient_id
        if patient_id not in patient_sessions:
            patient_sessions[patient_id] = []
        patient_sessions[patient_id].append(session)
    
    # Create therapy for each patient
    for patient_id, sessions in patient_sessions.items():
        try:
            patient = Patient.objects.get(pk=patient_id)
            # Create therapy with patient info
            therapy = Therapy.objects.create(
                patient=patient,
                title=f"Therapie für {patient.first_name} {patient.last_name}",
                description="Automatisch erstellt aus bestehenden Sitzungen",
                start_date=timezone.now().date(),
                status='active'
            )
            
            # Update sessions to reference the new therapy
            for session in sessions:
                session.therapy = therapy
                session.save()
                
        except Patient.DoesNotExist:
            # Skip if patient doesn't exist
            pass


def reverse_create_therapies(apps, schema_editor):
    """Reverse the therapy creation"""
    Therapy = apps.get_model('therapy', 'Therapy')
    Therapy.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('therapy', '0001_initial'),
        ('core', '0001_initial'),
    ]

    operations = [
        # Create Therapy model
        migrations.CreateModel(
            name='Therapy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titel')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('start_date', models.DateField(default=timezone.now, verbose_name='Startdatum')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Enddatum')),
                ('status', models.CharField(choices=[('active', 'Aktiv'), ('completed', 'Abgeschlossen'), ('paused', 'Pausiert'), ('cancelled', 'Abgebrochen')], default='active', max_length=20, verbose_name='Status')),
                ('goals', models.TextField(blank=True, verbose_name='Therapieziele')),
                ('notes', models.TextField(blank=True, verbose_name='Notizen')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Aktualisiert am')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Therapie',
                'verbose_name_plural': 'Therapien',
                'ordering': ['-start_date'],
            },
        ),
        
        # Create Document model
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titel')),
                ('content', models.TextField(verbose_name='Inhalt')),
                ('document_type', models.CharField(choices=[('report', 'Bericht'), ('assessment', 'Befund'), ('summary', 'Zusammenfassung'), ('letter', 'Brief'), ('other', 'Sonstiges')], default='report', max_length=20, verbose_name='Dokumenttyp')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Aktualisiert am')),
                ('therapy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='therapy.therapy', verbose_name='Therapie')),
            ],
            options={
                'verbose_name': 'Dokument',
                'verbose_name_plural': 'Dokumente',
                'ordering': ['-created_at'],
            },
        ),
        
        # Add therapy field to Session (nullable initially)
        migrations.AddField(
            model_name='session',
            name='therapy',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='therapy.therapy', verbose_name='Therapie'),
        ),
        
        # Create therapies for existing sessions
        migrations.RunPython(create_therapies_for_existing_sessions, reverse_create_therapies),
        
        # Make therapy field non-nullable
        migrations.AlterField(
            model_name='session',
            name='therapy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='therapy.therapy', verbose_name='Therapie'),
        ),
        
        # Remove patient field from Session
        migrations.RemoveField(
            model_name='session',
            name='patient',
        ),
        
        # Add sessions field to Document
        migrations.AddField(
            model_name='document',
            name='sessions',
            field=models.ManyToManyField(blank=True, to='therapy.session', verbose_name='Zugehörige Sitzungen'),
        ),
    ]
